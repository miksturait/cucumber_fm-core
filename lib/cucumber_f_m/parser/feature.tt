grammar Feature
  rule document
    feature
  end

  rule feature
    comments?
    white?
    tags_line?
    feature_info
  end

  rule feature_info
    feature_header
    feature_narration?
  end

  rule feature_header
    space* 'Feature:' [^\n]+ eol {
      def title
        text_value.gsub(/(^.*Feature:\s*|\n)/, '')
      end
    }
  end

  rule feature_narration
    non_empty_line*
  end

  rule tags_line
    space* '@' [^\n]+ eol {
     def tags
       text_value.scan(/@[^\s\n]+/)
     end
     }
  end

  rule comments
    (comment_line)* {
            def list
               elements.collect {|element| element.text_value }
            end
            }
  end

  rule comment_line
    space* '#' [^\n]+ eol
  end

  rule white
    (space / eol)*
  end

  rule non_empty_line
    [\s]* [A-Za-z0-9] [^\n]+ eol
  end

  rule eol
    "\n"
  end

  rule space
    ' '
  end

end













#require 'rubygems'
#require 'treetop'
#require 'polyglot'
#require 'tmp/comment'
#
#
#p = CommentParser.new()
#p.consume_all_input = false
#
#text = <<EOF
## first
# # second
#
# @aa @bb @cc
# Feature: Some title
#some narration lines
#so we would have narration
#
#
#  # last
#EOF
#
#r = p.parse(text)

